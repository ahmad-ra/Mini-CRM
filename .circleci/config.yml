version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.2-stretch #php:latest
      - image: circleci/mysql:5.7.33         #8.0.20-ram
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_USER: root
          MYSQL_DATABASE: db
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_PASSWORD: ''
         
    steps:
      - checkout

      - setup_remote_docker:

      - run:
          name: Install MySQL driver
          command: |
            mkdir ./artifacts
            sudo docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd >> ./artifacts/installation
            sudo docker-php-ext-install zip bcmath pdo_mysql >> ./artifacts/installation
      - run:
          name: Install dependencies 
          command: |
            composer update
            composer install -n --prefer-dist >> ./artifacts/composer
      - run: dockerize -wait tcp://localhost:3306 -timeout 1m     
      - run:
          name: copy env and generate key
          command: |
            cp .env.example .env  
            php artisan key:generate>> ./artifacts/key 
      - run:
          name: Migrate db 
          command: |
            php artisan migrate --env=testing --database=mysql --force --seed
 
  
      - store_artifacts:
          path: ./artifacts
          destination: build 

      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project      
      
  test:
    docker:
      - image: circleci/php:7.2-stretch #php:latest
      - image: circleci/mysql:5.7.33         #8.0.20-ram
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_USER: root
          MYSQL_DATABASE: db
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_PASSWORD: ''
         
    steps:
     # - checkout   
      - attach_workspace:
         at: ~/  
      - run:
          name: Unit tests 
          command: |
            ./vendor/bin/phpunit >>./artifacts/tests
      - store_artifacts:
          path: ./artifacts
          destination: test_results   
  codeHygiene:
    docker:
      - image: circleci/php:7.2-stretch #php:latest
      - image: circleci/mysql:5.7.33         #8.0.20-ram
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_USER: root
          MYSQL_DATABASE: db
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_PASSWORD: ''
         
    steps:
      #- checkout      
      - attach_workspace:
         at: ~/             
      - run:
          name: Install linter (Plus)
          command: |
            composer require magentron/laravel-blade-lint      

      - run:
          name: Run linter
          command: |
            php artisan blade:lint

  Cont_Delivery:
    docker:
      - image: circleci/php:7.2-stretch #php:latest
      - image: circleci/mysql:5.7.33         #8.0.20-ram
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_USER: root
          MYSQL_DATABASE: db
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_PASSWORD: ''
         
    steps:
      #- checkout      
      - attach_workspace:
         at: ~/ 
      - setup_remote_docker:           
      - run: dockerize -wait tcp://localhost:3306 -timeout 1m  
      - run:
          name: build_image
          command: |
            sudo docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd 
            sudo docker-php-ext-install zip bcmath pdo_mysql 
            docker build -t ahmrash/mini-crm .  #repo name must be all small letters

      - run:
          name: run_E2E_test
          command: |
            docker run -d --name ephermal ahmrash/mini-crm
            docker exec -it ephermal ./vendor/bin/phpunit


      - run:
          name: publish
          command: |
            echo $DockerHubPass | docker login -u $DockerHubUsername --password-stdin
            docker push ahmrash/mini-crm  

         
  deploy:
    machine:
        enabled: true
    #working_directory: ~/circleci-demo-workflows
    environment:
      HEROKU_APP: "first-try-123" # define env var $HEROKU_APP
      HEROKU_LOGIN: ahmad.m.rashed@outlook.com
      HEROKU_API_KEY: 1mentorG_rashed

    steps:
      - checkout
      - run:
          name: Setup Heroku
          command: bash .circleci/setup-heroku.sh # run a script to set up Heroku

      - run:
          command: |
            heroku config:set APP_KEY= cat ./artifacts/key 
            git push heroku circleci-project-setup:master 
            #heroku run #rake db:migrate
            sleep 5 # sleep for 5 seconds to wait for dynos
            heroku restart

workflows:
  version: 2
  build-and-test:
   jobs:
      - build

      - test:
          requires:
            - build

      - codeHygiene:
          requires:
            - test

      - Cont_Delivery:
          requires:
            - codeHygiene
