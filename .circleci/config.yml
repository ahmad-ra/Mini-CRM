version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.2-stretch #php:latest
      - image: circleci/mysql:5.7.33-ram         #8.0.20-ram
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_USER: root
          MYSQL_DATABASE: db
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_PASSWORD: ''
         
    steps:
      - checkout

      - setup_remote_docker:
         # docker_layer_caching: true not available in free plan of circle ci
      # - run:
      #     name: Start container and verify it is working
      #     command: |
      #       set -x
      #       docker-compose up -d
      #       docker run --network container:contacts \
      #         appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:8080/contacts/test

      - run:
          name: Install MySQL driver
          command: |
            mkdir ./artifacts
            sudo docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd >> ./artifacts/installation
            sudo docker-php-ext-install zip bcmath pdo_mysql >> ./artifacts/installation
      - run:
          name: Install dependencies 
          command: |
            composer update
            composer install -n --prefer-dist >> ./artifacts/composer
      - run: dockerize -wait tcp://localhost:3306 -timeout 1m     
      - run:
          name: copy env and generate key
          command: |
            cp .env.example .env  
            php artisan key:generate>> ./artifacts/key 
      - run:
          name: Migrate db 
          command: |
            php artisan migrate --env=testing --database=mysql --force --seed
 
      # - run:
      #     name: tryingIt
      #     command: |
      #       docker build -t ahmrash/mini-crm .  #repo name must be all small letters
      #       docker run -d --rm --name ephermal ahmrash/mini-crm
      #       docker exec -it ephermal ./vendor/bin/phpunit
      - store_artifacts:
          path: ./artifacts
          destination: build      
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project      
      # - run:
      #     name: Unit tests 
      #     command: |
      #       ./vendor/bin/phpunit  
      
      # - run:
      #     name: Install linter (Plus)
      #     command: |
      #       composer require magentron/laravel-blade-lint      

      # - run:
      #     name: Run linter
      #     command: |
      #       php artisan blade:lint            

      # - run:
      #     name: Build and push Docker image
      #     command: |
      #       #docker-compose build

      #       docker build -t ahmrash/mini-crm .  #repo name must be all small letters
      #       echo $DockerHubPass | docker login -u $DockerHubUsername --password-stdin
      #       docker push ahmrash/mini-crm
  test:
    docker:
      - image: circleci/php:7.2-stretch #php:latest
      - image: circleci/mysql:5.7.33-ram         #8.0.20-ram
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_USER: root
          MYSQL_DATABASE: db
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_PASSWORD: ''
         
    steps:
     # - checkout   
      - attach_workspace:
         at: ~/  
      - run:
          name: Unit tests 
          command: |
            ./vendor/bin/phpunit >>./artifacts/tests
      - store_artifacts:
          path: ./artifacts
          destination: test_results   
  codeHygiene:
    docker:
      - image: circleci/php:7.2-stretch #php:latest
      - image: circleci/mysql:5.7.33-ram         #8.0.20-ram
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_USER: root
          MYSQL_DATABASE: db
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_PASSWORD: ''
         
    steps:
      #- checkout      
      - attach_workspace:
         at: ~/             
      - run:
          name: Install linter (Plus)
          command: |
            composer require magentron/laravel-blade-lint      

      - run:
          name: Run linter
          command: |
            php artisan blade:lint

  Cont_Delivery:
    docker:
      - image: circleci/php:7.2-stretch #php:latest
      - image: circleci/mysql:5.7.33-ram         #8.0.20-ram
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_USER: root
          MYSQL_DATABASE: db
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_PASSWORD: ''
         
    steps:
      #- checkout      
      - attach_workspace:
         at: ~/ 
      - setup_remote_docker:           
      - run: dockerize -wait tcp://localhost:3306 -timeout 1m  
      - run:
          name: build_image
          command: |
            sudo docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd 
            sudo docker-php-ext-install zip bcmath pdo_mysql 
            docker build -t ahmrash/mini-crm .  #repo name must be all small letters
            # docker run -d --rm --name ephermal ahmrash/mini-crm
            # docker exec -it ephermal ./vendor/bin/phpunit
            #echo $DockerHubPass | docker login -u $DockerHubUsername --password-stdin
            #docker push ahmrash/mini-crm  
      - run:
          name: run_E2E_test
          command: |
            docker run -d --rm --name ephermal ahmrash/mini-crm
            docker exec -it ephermal ./vendor/bin/phpunit
            #echo $DockerHubPass | docker login -u $DockerHubUsername --password-stdin
            #docker push ahmrash/mini-crm  

      - run:
          name: publish
          command: |
            echo $DockerHubPass | docker login -u $DockerHubUsername --password-stdin
            docker push ahmrash/mini-crm  

         

workflows:
  version: 2
  build-and-test:
   jobs:
      - build

      - test:
          requires:
            - build

      - codeHygiene:
          requires:
            - test
      - Cont_Delivery:
          requires:
            - codeHygiene
